#!/usr/bin/env bash

# Author: Tyler Nguyen
# Version: v1.3.2


# :%s/^[ ]\+/\t/g : to indent correctly

options()
{
	cat << EOF
Options:
	-h          open this manual
	-o          give a custom target name
  -s          special tag to build a hierarchical directory structors for files

Report bugs to tyler.t.nguyen@uconn.edu.
EOF
}

usage()
{
	cat << EOF
Description: Create a template Makefile for your current project.
	It saves a lot of time configuring a Makefile.
	This can be used both in a small and large project

Usage: createmf [-o] {fileName} {executableName}
Usage: createmf [-h]
Usage: createnf [-s] {fileName}

EOF
options;
}

cTemplate()
{
	# templates for C/C++
	cat << EOF > Makefile

TARGETS=$1

CC=@$2

CFLAGS= -I -Wall -std=$4

SOURCE= \$(wildcard *.$3)

HFILES=\$(SOURCE:.cpp=.h)

OFILES=\$(SOURCE:.cpp=.o)

all: run

%.o: %.$3
	\$(CC) -c \$< -o \$@ \$(CFLAGS)

\$(TARGETS): \$(OFILES)
	\$(CC) \$(CFLAGS) -o \$(TARGETS) \$(OFILES)

run: \$(TARGETS)
	@./\$(TARGETS)

clean:
	@rm -rf \$(TARGETS) *.out \$(TARGETS).exe *.o

# None-File Targets
.PHONY: all run clean
EOF
}

cTemplateSpecial()
{
	# templates for C/C++
	cat << EOF > Makefile

TARGETS=$1

CC=@$2

CFLAGS= -Iinclude -Wall -std=$4

MKDIR_P=@mkdir -p

SRCDIR=src

OBJDIR=bin

SOURCE= \$(wildcard \$(SRCDIR)/*.$3)

HFILES=\$(SOURCE:.cpp=.h)

OFILES=\$(patsubst \$(SRCDIR)/%,\$(OBJDIR)/%,\$(SOURCE:.cpp=.o))

all: directories run

directories:
	\$(MKDIR_P) \$(SRCDIR)
	\$(MKDIR_P) \$(OBJDIR)

\$(OBJDIR)/%.o: \$(SRCDIR)/%.$3
	\$(CC) \$(CFLAGS) -c \$< -o \$@

\$(TARGETS): \$(OFILES)
	\$(CC) \$(CFLAGS) -o \$(TARGETS) \$(OFILES)

run: \$(TARGETS)
	@./\$(TARGETS)

clean:
	@rm -rf \$(TARGETS) *.out \$(TARGETS).exe *.o \$(OFILES)

# None-File Targets
.PHONY: all directories run clean
EOF
}

cSharpTemplate()
{
	# templates for C#
	cat << EOF > Makefile

TARGETS=$1

CC=@$2

CFLAGS= -out:\$(TARGETS)

SOURCE= \$(wildcard *.$3)

all: run

\$(TARGETS): \$(TARGETS).$3
	\$(CC) \$(CFLAGS) \$(TARGETS).$3

run: \$(TARGETS)
	@mono \$(TARGETS)

clean:
	@rm -rf \$(TARGETS) \$(TARGETS).exe

# None-File Targets
.PHONY: all run clean
EOF
}

if [ -z "$1" ]; then
	usage;
	exit 0;
fi

# ${filename#*.} : # removes everything before the first dot (inclusive) from left to right
# ${filename%.*} : % removes everything after the first dot (inclusive) from right to left
while getopts ":ho:s" opt; do
	case $opt in
	h)  usage;
	exit 0;
	;;
	o)  shift;
	;;
	s) special=1;
	shift;
	;;
	\?) echo "Invalid option: $OPTARG" >&2;
	options;
	exit 1;
	;;
	esac
done
filename=$1
extension="${filename#*.}"
if [ -z "$2" ]; then
	name="${filename%.*}"
else
	name=$2
fi

case $extension in
	cs) COMPILER="mcs";
	cSharpTemplate $name $COMPILER $extension;
	exit 0;
	;;
	cpp) COMPILER="g++";
	STD="c++11"
	[[ "$special" -eq 1 ]] && cTemplateSpecial $name $COMPILER $extension $STD || cTemplate $name $COMPILER $extension $STD
	exit 0;
	;;
	c) COMPILER="gcc";
	STD="c99"
	[[ "$special" -eq 1 ]] && cTemplateSpecial $name $COMPILER $extension $STD || cTemplate $name $COMPILER $extension $STD
	exit 0;
	;;
esac


